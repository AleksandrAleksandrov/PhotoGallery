apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.0'
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.aleksandr.aleksandrov.gallery.photo.photogallery"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 2
        versionName "1.02"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ext.betaDistributionGroupAliases = "photo_gallery_beta"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        // configure keystore
        signingConfigs.release.storeFile = file("../gallery_key.keystore")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("alias_test_gallery")
        signingConfigs.release.keyPassword = System.getenv("keystore_alias_password")
        def propertiesFile = file('fabric.properties')
        if (!propertiesFile.exists()) {
            def commentMessage = "This is autogenerated fabric property from system environment to prevent key to be committed to source control."
            ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
                entry(key: "apiSecret", value: System.getenv("apiSecret"))
                entry(key: "apiKey", value: System.getenv("apiKey"))
            }
        }
    }

//    def initFabricPropertiesIfNeeded() {

//    }
}

//afterEvaluate {
//    initFabricPropertiesIfNeeded()
//}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}
